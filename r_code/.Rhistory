sum(topT$P.Value<0.1) # 1146
topT[topT$ID=="ILMN_3236653",] # 2way pvalue 0.0064, logFC 0.47
fc3 <- fc1-fc2
head(fc3)
head(cbind(topT$ID,fc1,fc2,fc3))
head(cbind(rownames(topT),fc1,fc2,fc3))
r <- t.test(fc3)
head(r)
head(r$p.value)
treat <- factor(paste(pData(gse_sm)$status,pData(gse_sm)$treat,sep="."))
head(treat)
mm <- model.matrix(~treat)
head(mm)
colnames(mm) <- levels(treat)
head(mm)
mm <- model.matrix(~0+treat)
colnames(mm) <- levels(treat)
mm <- model.matrix(~0+treat)
head(mm)
fit_mm <- lmFit(gse_sm,mm)
cm <- makeContrasts(neg.MockvsPoly=treatneg.Mock-treatneg.Poly,levels=mm)
fit2 <- contrasts.fit(fit_mm,cm)
fit2 <- eBayes(fit2)
names(fit2$coef)
head(ft2)
head(fit2)
head(fit2$coef)
topTable(fit2,coef="neg.MockvsPoly")
head(fit_mm$coef)
cm <- makeContrasts(mock.NegvsPos=treatneg.Mock-treatpos.Mock,levels=mm)
fit2 <- contrasts.fit(fit_mm,cm)
fit2 <- eBayes(fit2)
topTable(fit2,coef="mock.NegvsPos")
t <- topTable(fit2,coef="mock.NegvsPos")
t[t$ID=="ILMN_3236653",] # 2way pvalue 0.0064, logFC 0.47
head(t)
dim(t)
t <- topTable(fit2,coef="mock.NegvsPos",number=Inf,sort.by="none")
t[t$ID=="ILMN_3236653",] # 2way pvalue 0.0064, logFC 0.47
cm <- makeContrasts(mock.NegvsPos=treatneg.Mock-treatpos.Mock,poly.NegvsPos=treatneg.Poly-
treatpos.Poly,levels=mm)
fit2 <- contrasts.fit(fit_mm,cm)
fit2 <- eBayes(fit2)
tp <- topTable(fit2,coef="poly.NegvsPos",number=Inf,sort.by="none")
tp[tp$ID=="ILMN_3236653",] # 2way pvalue 0.0064, logFC 0.47
sum(tp$P.Value<0.1)
tp[tp$ID=="ILMN_3244646",] # 2way pvalue 0.0064, logFC 0.47
treat <- factor(pData(gse_sm)$status,sep="."))
treat <- factor(pData(gse_sm)$status)
head(treat)
gse_smM <- gse_sm[,pData(gse_sm)$treat=="Poly"]
dim(gse_smM)
gse_smP <- gse_smM
rm(gse_smM)
treat <- factor(pData(gse_smP)$status)
mm <- model.matrix(~0+treat)
colnames(mm) <- levels(treat)
fit_mm <- lmFit(gse_smP,mm)
cm <- makeContrasts(poly.NegvsPos=treatneg.Poly-treatpos.Poly,levels=mm)
head(mm)
cm <- makeContrasts(poly.NegvsPos=neg-pos,levels=mm)
fit2 <- contrasts.fit(fit_mm,cm)
fit2 <- eBayes(fit2)
t <- topTable(fit2,coef="poly.NegvsPos",number=Inf,sort.by="none")
t[t$ID=="ILMN_3236653",] # 2way pvalue 0.0064, logFC 0.47
tp[1:43,]
?topTable
treat <- factor(paste(pData(gse_sm)$status,pData(gse_sm)$treat,sep="."))
mm <- model.matrix(~0+treat)
colnames(mm) <- levels(treat)
fit_mm <- lmFit(gse_sm,mm)
cm <- makeContrasts(mock.NegvsPos=treatneg.Mock-treatpos.Mock,poly.NegvsPos=treatneg.Poly-
treatpos.Poly,levels=mm)
fit2 <- contrasts.fit(fit_mm,cm)
fit2 <- eBayes(fit2)
treat <- factor(paste(pData(gse_sm)$status,pData(gse_sm)$treat,sep="."))
mm <- model.matrix(~0+treat)
colnames(mm) <- levels(treat)
fit_mm <- lmFit(gse_sm,mm)
cm <- makeContrasts(mock.NegvsPos=treatneg.Mock-treatpos.Mock,poly.NegvsPos=treatneg.Poly-
treatpos.Poly,levels=mm)
head(mm)
cm <- makeContrasts(mock.NegvsPos=neg.Mock-pos.Mock,poly.NegvsPos=neg.Poly-
pos.Poly,levels=mm)
fit2 <- contrasts.fit(fit_mm,cm)
fit2 <- eBayes(fit2)
tp <- topTable(fit2,coef="poly.NegvsPos",number=Inf,sort.by="P.Value")
tp <- topTable(fit2,coef="poly.NegvsPos",number=Inf,sort.by="P")
tp[tp$ID=="ILMN_3236653",] # 2way pvalue 0.0064, logFC 0.47
tp[tp$ID=="ILMN_3244646",]
tp[1:43,c("ID","P.Value")]
tp[44:45,c("ID","P.Value")]
cm <- makeContrasts(mock.NegvsPos=neg.Mock-pos.Mock,poly.NegvsPos=neg.Poly-
pos.Poly,neg.MockvsPoly=neg.Mock-neg.Poly,
pos.MockvsPoly=pos.Mock-pos.Poly,
tot=neg.MockvsPoly-pos.MockvsPoly,levels=mm)
cm <- makeContrasts(mock.NegvsPos=neg.Mock-pos.Mock,poly.NegvsPos=neg.Poly-
pos.Poly,neg.MockvsPoly=neg.Mock-neg.Poly,
pos.MockvsPoly=pos.Mock-pos.Poly,levels=mm)
fit2 <- contrasts.fit(fit_mm,cm)
fit2 <- eBayes(fit2)
tp <- topTable(fit2,coef="poly.NegvsPos",number=Inf,sort.by="none")
tp[tp$ID=="ILMN_3236653",] # 2way pvalue 0.0064, logFC 0.47
head(fit2$coef)
tp2 <- topTable(fit2,coef="neg.MockvsPoly",number=Inf,sort.by="none")
tp2[tp2$ID=="ILMN_3236653",] # 2way pvalue 0.0064, logFC 0.47
tp2 <- topTable(fit2,coef="pos.MockvsPoly",number=Inf,sort.by="none")
tp2[tp2$ID=="ILMN_3236653",] # 2way pvalue 0.0064, logFC 0.47
library(yeastRNASeq)#
files <- list.files(file.path(system.file(package = "yeastRNASeq"),#
"reads"), pattern = "fastq", full.names = TRUE)
install.packages("yeastRNASeq")
source("http://bioconductor.org/biocLite.R")#
biocLite("yeastRNASeq")
library(yeastRNASeq)
files <- list.files(file.path(system.file(package = "yeastRNASeq"),#
"reads"), pattern = "fastq", full.names = TRUE)#
names(files) <- gsub("\\.fastq.*", "", basename(files))
files
met <- DataFrame(conditions=c(rep("mut",2),rep("wt",2)),#
row.names=names(files))#
fastq <- FastqFileList(files)#
elementMetadata(fastq) <- met#
fastq
met <- data.frame(conditions=c(rep("mut",2),rep("wt",2)),#
row.names=names(files))#
fastq <- FastqFileList(files)#
elementMetadata(fastq) <- met#
fastq
library(EDASeq)
fastq <- FastqFileList(files)#
elementMetadata(fastq) <- met#
fastq
met <- DataFrame(conditions=c(rep("mut",2),rep("wt",2)),#
row.names=names(files))#
fastq <- FastqFileList(files)#
elementMetadata(fastq) <- met#
fastq
files
files <- list.files(file.path("/Users/c8linmch/yeast"),pattern="fastq",full.names=TRUE)
files
head(files)
twelve <- 53.028
eleven <- 51.881
ten <- 50.478
(twelve-ten)/twelve
twelve-ten
7+8+8
23+8+8
15+8+8+8+8
15+8+8+8
8*4+7
ReadGRMBin=function(prefix, AllN=F, size=4){
sum_i=function(i){
return(sum(1:i))
}
BinFileName=paste(prefix,".grm.bin",sep="")
NFileName=paste(prefix,".grm.N.bin",sep="")
IDFileName=paste(prefix,".grm.id",sep="")
id = read.table(IDFileName)
n=dim(id)[1]
BinFile=file(BinFileName, "rb");
grm=readBin(BinFile, n=n*(n+1)/2, what=numeric(0), size=size)
NFile=file(NFileName, "rb");
if(AllN==T){
N=readBin(NFile, n=n*(n+1)/2, what=numeric(0), size=size)
}
else N=readBin(NFile, n=1, what=numeric(0), size=size)
i=sapply(1:n, sum_i)
return(list(diag=grm[i], off=grm[-i], id=id, N=N))
}
# cpm
1/0
sum(as.vector(as.matrix(trueHits))<alpha)/length((as.vector(as.matrix(trueHits))<alpha) # 0.9
rm(list=ls())
source("http://bioconductor.org/biocLite.R")
biocLite("BiocParallel")
?bpvalidate
?bplapply
library(BiocParallel)
?bplapply
?bpvalidate
library(cpvSNP)
biocLite("cpvSNP")
fun <- function(x) if( length( x ) > 1 ){#
density( x, na.rm = TRUE )#
} else { NULL })
fun <- function(x){if( length( x ) > 1 ){#
density( x, na.rm = TRUE )#
} else { NULL })}
fun <- function(x){if( length( x ) > 1 ){#
density( x, na.rm = TRUE )#
} else { NULL }}
bpvalidate(fun)
fun <- function(x) arrayData$SNP[x]
bpvalidate(fun)
fun <- function(x)function(x, arrayData) arrayData$SNP[x], arrayData=arrayData
fun <- function(x, arrayData) arrayData$SNP[x], arrayData=arrayData
fun <- function(x, arrayData) arrayData$SNP[x]
bpvalidate(fun)
q()
?elseif
?else
5*1500
1000000/7500
133/10
100000/100
100000/300
100000/30
100000/3000
?legend
??legend
158778-3582
5*1500*
5
?list.files
163.07*4
4392-652
13500*5
library(ggplot2)
q()
install.packages("ggplot2")
library(ggplot2)
require("ggplot2")
capabilities("ggplot2")
?install.packages
.libPaths()
library(ggplot2,lib.loc="/var/folders/vk/w81j5cj13ks7lfyxj5t0hrjr0000gn/T//Rtmp8PO95T/downloaded_packages")
library(ggplot2,lib.loc="/var/folders/vk/w81j5cj13ks7lfyxj5t0hrjr0000gn/T//Rtmp8PO95T/downloaded_packages/ggplot2")
library(xtable)
?library
.libPaths()
getwd()
list.files("Library/Frameworks/R.framework/Versions/3.1/Resources/library")
.packages()
.packages(all.available=TRUE)
library(ggplot2)
library(sandwich)
uninstall.packages(ggplot2)
installed.packages()
library(ggplot2)
.packages(all.available=TRUE)
installed.packages()
install.packages("ggplot2")
library(ggplo2)
library(ggplot2)
install.packages("ggplot2",dependencies=c("Depends","Imports","Suggests"))
library(ggplot2)
traceback()
sessionInfo()
library(ggplot2)
traceback()
library(tcltk)
library(Rcmdr)
library(ggplot2)
library(roxygen2)
?roxygenize
?rd_roclet
getwd()
roxygenize("Documents/CAnD_package/CAnD/",roclets="rd_roclet")
roxygenize("Documents/CAnD_package/CAnD/",roclets="rd")
?system.call
??system
16*2\
16*2
20*1500
59836/20
59836/1500
26-7
562+14
576+120
576+120+40
576+120+40+10+60+60+80
2500/4
2500/3
0.974-0.5
1.15-0.5
0.947-0.3
1.15-0.5
.13/.3
.22/.5
.3/.32
.53*.5
.32/.3
.39/.3
.53/.5
.65/.5
47+2
setwd("~/Documents/tim_stuff/r_code")
mxl <- get(load("mxl_estimates_withLocal_v2.RData"))
dim(mxl)
head(mxl)
4109-2967
2500/4
625*2
5668-1875
370/2
189/5
78/189
33/189
78*2
156/189
154*.8253968
127/2
154-64-64
78-64
33-26
1000000/5000
1000000/10000
?write.table
2500*5
2500*5*10
2500*5*100
2500*5
2500*5*10
2500*5*20
2500*5*80
2000*5
2000/325
35272/2
35272/8
35272/4
35272/3
